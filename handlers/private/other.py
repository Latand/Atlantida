from aiogram import types
from aiogram.dispatcher.storage import FSMContext

from app import dp, logging, _
from utils.filters import IsPrivate


@dp.message_handler(IsPrivate(), commands=["start"])
async def start(message: types.Message):
    text = _("üèõ –ß—Ç–æ–±—ã –Ω–∞–ª–∞–¥–∏—Ç—å ‚ö°Ô∏è—Å–≤—è–∑—å –≤ ‚òÄÔ∏è–ê—Ç–ª–∞–Ω—Ç–∏–¥–µ - "
             "–¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —á–∞—Ç/–∫–∞–Ω–∞–ª –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –Ω—ë–º –∫–æ–º–∞–Ω–¥—É "
             "/connect")
    await message.answer(text)


@dp.message_handler(IsPrivate(), commands=["cancel"], state="*")
async def no_state_text(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer(_("–ì–æ—Ç–æ–≤–æ"))


@dp.callback_query_handler(IsPrivate())
async def no_state_call(call: types.CallbackQuery, state: FSMContext):
    logging.info(f"{state}")
    await call.message.edit_reply_markup()
    await call.message.answer(_("üèõ –£ –í–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ ‚òÄÔ∏è–ê—Ç–ª–∞–Ω—Ç–∏–¥–µ."
                                "–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ —É–∫–∞–∑–∞–≤ –≤ –Ω—É–∂–Ω–æ–º üè° —á–∞—Ç–µ/–∫–∞–Ω–∞–ª–µ –∫–æ–º–∞–Ω–¥—É"
                                "/connect\n"))


@dp.message_handler(IsPrivate(), commands=["register"])
async def no_state_text(message: types.Message, state: FSMContext):
    await message.answer(_("üèõ –î–∞ –Ω–µ –∑–¥–µ—Å—å –∂–µ, –∞ –≤ –≥—Ä—É–ø–ø–µ! üåû"))


@dp.message_handler(IsPrivate())
async def no_state_text(message: types.Message, state: FSMContext):
    logging.info(f"{state}")
